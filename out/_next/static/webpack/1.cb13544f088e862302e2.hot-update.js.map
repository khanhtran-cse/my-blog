{"version":3,"file":"static/webpack/1.cb13544f088e862302e2.hot-update.js","sources":["webpack:///./data/detail/post-1.js"],"sourcesContent":["import Meta from '../meta';\n\nexport default () => {\n    const postMeta = Meta.getPost(1);\n\n    const coverUrl = postMeta.image;\n    const name = postMeta.name;\n    const date = postMeta.date_string;\n    const category = postMeta.category ? postMeta.category : [];\n    const cateView = [];\n    for (let i = 0; i < category.length; i++) {\n        cateView.push(<div key={i} className=\"post-detail-category mx-1\">{category[i]}</div>)\n    }\n\n    return (\n        <div className=\"col-12 d-flex flex-column align-items-center\">\n            <div className=\"post-cover-image\"\n                style={{ background: `url(${coverUrl})` }}></div>\n\n            <div className=\"post-detail px-5\">\n                <div className=\"d-flex align-items-center justify-content-center mt-5\">\n                    <h2 className=\"post-detail-title\">{name}</h2>\n                </div>\n                <div className=\"d-flex align-items-center justify-content-center mb-3\">\n                    <div className=\"post-detail-date mx-1\">{date}</div>\n                    {cateView}\n\n                </div>\n\n                <h3>Table of Contents</h3>\n                <ol>\n                    <li>Introduction</li>\n                    <li>Prerequisites</li>\n                    <li>A quick primer on Docker and AWS</li>\n                    <li>What weâ€™ll be deploying</li>\n                    <li>Creating a Dockerfile</li>\n                    <li>Building a docker image</li>\n                    <li>Running a docker container</li>\n                    <li>Creating the Registry (ECR) and upload the app image to it</li>\n                    <li>Creating a new task definition</li>\n                    <li>Creating a cluster</li>\n                    <li>Creating a service to run it</li>\n                    <li>Conclusion</li>\n                </ol>\n            </div>\n        </div>\n    )\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;A","sourceRoot":""}